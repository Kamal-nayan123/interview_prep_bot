import React from 'react'
import { Button } from '@/components/ui/button'
import Link from 'next/link'
import Image from 'next/image'
import InterviewCard from '../components/InterviewCard'
import { getCurrentUser} from "@/lib/actions/auth.actions" 
import {getInterviewsByUserId, getLatestInterviews } from '@/lib/actions/general.action'

const Homepage = async () => {
  const user= await getCurrentUser();

  const [userInterviews,LatestInterviews]=await Promise.all([
    user?.id ? getInterviewsByUserId(user.id) : null,
    user?.id ? getLatestInterviews({ userId: user.id }) : null
  ])

  const hasPastInterviews = (userInterviews ?? []).length > 0;
  const upcomingInterviews = (LatestInterviews ?? []).length > 0;
  return (
    <>
      <section className="card-cta">
        <div className="flex flex-col gap-6 max-w-lg">
          <h2>Get Interview Ready with AI Powered Practice & Feedback</h2>
          <p>
            Generate and Practice job interviews with AI. Get instant feedback and improve
            your skills and take the interviews generated by others.
            </p>
            <Button asChild className="btn-primary max-sm:w-full">
            <Link href="/interview">Generate an Interview</Link>
            </Button>
        </div>
        <Image src="/robot.png" alt="robo-dude" width={400} height={400} className="max-sm:hidden" />
      </section>
      <section className="flex flex-col gap-6 mat-8">
        <h2>Your Interviews</h2>
        <div className="Interview-section flex flex-row gap-6">
          {
              hasPastInterviews?(
                userInterviews?.map((interview)=>(
                  <InterviewCard {...interview} key={interview.id}/>
                ))
              ):(
              <p>You have not taken any interviews  </p>
              )
            }
        </div>
      </section>
      <section className="flex flex-col gap-6 mt-8">
          <h2>Take An Interview</h2>
          <div className="Interview-section flex flex-row gap-6">
            {
              upcomingInterviews?(
                LatestInterviews?.map((interview)=>(
                  <InterviewCard {...interview} key={interview.id}/>
                ))
              ):(
              <p>There are no new interviews available =</p>
              )
            }
          </div>
      </section>
    </>
  )
}

export default Homepage 